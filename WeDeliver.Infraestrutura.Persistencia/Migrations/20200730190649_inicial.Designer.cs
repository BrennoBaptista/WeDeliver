// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeDeliver.Infraestrutura.Persistencia;

namespace WeDeliver.Infraestrutura.Persistencia.Migrations
{
    [DbContext(typeof(WeDeliverDbContext))]
    [Migration("20200730190649_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WeDeliver.Dominio.Entidades.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DataCriacao")
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<DateTime>("DataModificacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DataCriacao")
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(20);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(20);

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnName("Sobrenome")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(20);

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnName("Telefone")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(12);

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("WeDeliver.Dominio.Entidades.Objeto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Altura")
                        .HasColumnName("Altura")
                        .HasColumnType("float");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DataCriacao")
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<DateTime>("DataModificacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DataCriacao")
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<double>("Largura")
                        .HasColumnName("Largura")
                        .HasColumnType("float");

                    b.Property<double>("Peso")
                        .HasColumnName("Peso")
                        .HasColumnType("float");

                    b.Property<double>("Profundidade")
                        .HasColumnName("Profundidade")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Objetos");
                });

            modelBuilder.Entity("WeDeliver.Dominio.Entidades.Pacote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DataCriacao")
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<DateTime>("DataModificacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DataCriacao")
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<Guid>("DestinatarioId")
                        .HasColumnName("DestinatarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RemetenteId")
                        .HasColumnName("RemetenteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnName("Status")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnName("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DestinatarioId");

                    b.HasIndex("RemetenteId");

                    b.ToTable("Pacotes");
                });

            modelBuilder.Entity("WeDeliver.Dominio.Entidades.Cliente", b =>
                {
                    b.OwnsOne("WeDeliver.Dominio.Entidades.Objetos_de_valor.Documento", "Documento", b1 =>
                        {
                            b1.Property<Guid>("ClienteId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Cpf")
                                .IsRequired()
                                .HasColumnName("Cpf")
                                .HasColumnType("varchar(255)")
                                .HasMaxLength(11);

                            b1.Property<DateTime>("DataNascimento")
                                .HasColumnName("DataNascimento")
                                .HasColumnType("Date");

                            b1.Property<string>("Identidade")
                                .IsRequired()
                                .HasColumnName("Identidade")
                                .HasColumnType("varchar(255)")
                                .HasMaxLength(9);

                            b1.HasKey("ClienteId");

                            b1.ToTable("Clientes");

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");
                        });

                    b.OwnsOne("WeDeliver.Dominio.Entidades.Objetos_de_valor.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("ClienteId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Bairro")
                                .HasColumnName("Bairro")
                                .HasColumnType("varchar(255)")
                                .HasMaxLength(25);

                            b1.Property<string>("Cep")
                                .HasColumnName("Cep")
                                .HasColumnType("varchar(255)")
                                .HasMaxLength(7);

                            b1.Property<string>("Cidade")
                                .HasColumnName("Cidade")
                                .HasColumnType("varchar(255)")
                                .HasMaxLength(25);

                            b1.Property<string>("Complemento")
                                .HasColumnName("Complemento")
                                .HasColumnType("varchar(255)")
                                .HasMaxLength(25);

                            b1.Property<string>("Estado")
                                .HasColumnName("Estado")
                                .HasColumnType("varchar(255)")
                                .HasMaxLength(25);

                            b1.Property<string>("Logradouro")
                                .HasColumnName("Logradouro")
                                .HasColumnType("varchar(255)")
                                .HasMaxLength(50);

                            b1.Property<string>("Lote")
                                .HasColumnName("Lote")
                                .HasColumnType("varchar(255)")
                                .HasMaxLength(4);

                            b1.HasKey("ClienteId");

                            b1.ToTable("Clientes");

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");
                        });
                });

            modelBuilder.Entity("WeDeliver.Dominio.Entidades.Pacote", b =>
                {
                    b.HasOne("WeDeliver.Dominio.Entidades.Cliente", "Destinatario")
                        .WithMany()
                        .HasForeignKey("DestinatarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WeDeliver.Dominio.Entidades.Cliente", "Remetente")
                        .WithMany()
                        .HasForeignKey("RemetenteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
